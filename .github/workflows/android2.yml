name: Android CI

on:
  workflow_dispatch:
    inputs:
      variant:
        description: 'Build Variant'
        required: true
        default: 'airklassTestRelease'
        type: choice
        options:
        - airklassTestRelease
      patchNoteLink:
        description: '패치노트 링크'
        required: false 
        type: string 

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      SLACK_TAMPLETE: 'ts={1}&channel={2}&attachments=[{{"color":"#{3}","blocks":[{{"type":"header","text":{{"type":"plain_text","text":"{4}","emoji":true}}}},{{"type":"section","text":{{"type":"mrkdwn","text":"{5} <{6}|#{7}>"}}}},{{"type":"section","text":{{"type":"mrkdwn","text":"{0}.. <{8}|more>"}}}}]}}]'
      SLACK_DISPLAY_TITLE: "ANDROID TEST APP"
      SLACK_CHANNEL: "C03FYEWR00P"
      SLACK_COLOR_SUCCESS: "0000a3"
      SLACK_COLOR_FAIL: "00a300"
      SLACK_COLOR_WORKING: "a30000"
      
    steps:
      - name: test
        run: echo "${{github.event}}"

      - name: Deploy Stage
        id: slackapi
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://slack.com/api/chat.postMessage'
          contentType: application/x-www-form-urlencoded
          method: 'POST'
          bearerToken: ${{ secrets.SLACK_TOKEN }}
          data: ${{format('channel={0}&text=github action w{{}}orkflow starting."aa":"bb"{{a}}.', env.SLACK_CHANNEL)}}

      - name: Show Response
        id: set_var
        run: |
          echo '${{ steps.slackapi.outputs.response }}' > response.json
          content=`cat response.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=packageJson::$content"
      - run: |
          echo "${{fromJson(steps.set_var.outputs.packageJson).ts}}"

      #JDK SETUP

      - uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://slack.com/api/chat.update'
          contentType: application/x-www-form-urlencoded
          method: 'POST'
          bearerToken: ${{ secrets.SLACK_TOKEN }}
          data: ${{format(env.SLACK_TAMPLETE, 'init gradle', fromJson(steps.set_var.outputs.packageJson).ts, env.SLACK_CHANNEL, env.SLACK_COLOR_WORKING, env.SLACK_DISPLAY_TITLE, 'pr name', 'https://naver.com','25', 'https://naver.com')}}

      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://slack.com/api/chat.update'
          contentType: application/x-www-form-urlencoded
          method: 'POST'
          bearerToken: ${{ secrets.SLACK_TOKEN }}
          data: ${{format(env.SLACK_TAMPLETE, 'Decode Keystore', fromJson(steps.set_var.outputs.packageJson).ts, env.SLACK_CHANNEL, env.SLACK_COLOR_WORKING, env.SLACK_DISPLAY_TITLE, 'pr name', 'https://naver.com','25', 'https://naver.com')}}

      - name: Decode Keystore
        run: echo "${{ secrets.KEY_STORE_BASE64 }}" | base64 -d > app/keystore.jks
  
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew app:bundleDev
        env:
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}

      - name: Create service_account.json FROM secrets.SERVICE_ACCOUNT_JSON
        run: echo '${{ secrets.SERVICE_ACCOUNT_KEY }}' > service_account.json

      - name: Deploying app at play console
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: kr.umaru.videoplayer
          releaseFiles: app/build/outputs/bundle/DevRelease/*.aab
          track: internal
          status: completed
          inAppUpdatePriority: 2
#           userFraction: 0.33
          
      - name: Slack Notification Finish With Success
        uses: rtCamp/action-slack-notify@v2
        if: success()
        env:
          SLACK_ICON_EMOJI: ":android:"
          SLACK_TITLE: ":android2: 빌드 성공 / 버전 : $($) / 브랜치 : $"
          SLACK_USERNAME: "ssm-mobile-builder-bot"
          SLACK_CHANNEL: "#notification-android"
          SLACK_COLOR: "#00BFA5"
          SLACK_MESSAGE: "commit : $\n<$/$/$|파일다운로드>, <$$/|브라우징>"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Slack Notification Finish With Fail
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_ICON_EMOJI: ":android:"
          SLACK_TITLE: ":android2: 빌드 실패 / 버전 : $($) / 브랜치 : $"
          SLACK_USERNAME: "ssm-mobile-builder-bot"
          SLACK_CHANNEL: "#notification-android"
          SLACK_COLOR: "#FF5252"
          SLACK_MESSAGE: "commit : $"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
